####
# .zshrc file
#
# Maintainer  : Sotaro KARASAWA <sotaro.k@gmail.com>
# LICENSE: Public Domain
####

#export LANG=ja_JP.UTF-8
export LANG=en_US.UTF-8

# „Éë„Çπ„ÅÆË®≠ÂÆö
PATH=$HOME/bin:$HOME/local/bin:/usr/gnu/bin:/usr/local/bin:/usr/local/go/bin:/opt/local/bin:$PATH:/sbin:/usr/sbin
export MANPATH=/usr/local/man:/usr/share/man

# Emasc È¢®„Ç≠„Éº„Éê„Ç§„É≥„Éâ
bindkey -e

if test -d $HOME/.zplug; then
    export ZPLUG_LOADFILE="$HOME/.zsh/zplug.zsh"

    source $HOME/.zplug/init.zsh

    zplug load

    if zplug check b4b4r07/enhancd; then
        export ENHANCD_DOT_SHOW_FULLPATH=1
        export ENHANCD_DISABLE_DOT=1
        export ENHANCD_DISABLE_HOME=1
        #export ENHANCD_HOOK_AFTER_CD=ls

        alias j=cd # fallback
    fi
fi

# „Ç®„Éá„Ç£„Çø„Çí vim „Å´Ë®≠ÂÆö
export EDITOR="vim"
export CLICOLOR=1
export GTEST_COLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

if test -d /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home; then
    export JAVA_HOME=/Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home
fi

#for aws
export AWS_RDS_HOME=$HOME/aws/RDSCli-1.4.006
export PATH=$AWS_RDS_HOME/bin:$PATH
export EC2_CERT=$HOME/aws/cert-X2E4GDTRX72W7XJ5AM4JRPOTSIXQYFTY.pem
export EC2_PRIVATE_KEY=$HOME/aws/pk-X2E4GDTRX72W7XJ5AM4JRPOTSIXQYFTY.pem
export EC2_URL=https://ec2.ap-northeast-1.amazonaws.com
export EC2_REGION=ap-northeast-1

export SCREEN_USING=1

export DEBEMAIL="sotaro.k@gmail.com"
export DEBFULLNAME="Sotaro Karasawa"

export LESS=' -R'
test -f /usr/share/source-highlight/src-hilite-lesspipe.sh && export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"

yarn --version >> /dev/null 2>&1 && export PATH="$PATH:`yarn global bin`"

# „Éó„É≠„É≥„Éó„Éà„ÅÆË®≠ÂÆö
autoload -U colors; colors

# Èñ¢Êï∞
find-grep () { find . -type f -print | xargs grep -n --binary-files=without-match $@ }
grepv () { grep -irn --binary-files=without-match $@ * | grep -v svn | grep -v .git }
touchtodaytxt () {
    TODAY=`date +%Y-%m-%d`
    if [ $1 ]; then
        suffix="-"$1
    else
        suffix=""
    fi
    echo "= "${TODAY}" =" >> ${TODAY}${suffix}.txt
}

fpath=(~/.zshrc.d/completion $fpath)

# „Ç®„Ç§„É™„Ç¢„Çπ„ÅÆË®≠ÂÆö
# (dircolor„ÅÆË™≠„ÅøËæº„Åø)
case "${OSTYPE}" in
    darwin*)
        alias ls='ls -G'
        ;;
    solaris*)
        test -f ~/.dircolors && eval `dircolors -b ~/.dircolors`
        alias ls='ls --color=auto'
        ;;
    linux*)
        test -f ~/.dircolors && eval `dircolors -b ~/.dircolors`
        test -f ~/.dotfiles/zsh/dircolors-solarized/dircolors.ansi-universal && eval `dircolors -b ~/.dotfiles/zsh/dircolors-solarized/dircolors.ansi-universal`
        alias ls='ls --color=auto'

        # mac „ÅÆ zsh „Å†„Å®Èñ¢Êï∞„ÅåÊúÄÂàù„Å´„Éë„Éº„Çπ„Çå„Å°„ÇÉ„ÅÜÔºü
        # (which git „ÅÆÊôÇÁÇπ„ÅßÈñ¢Êï∞/alias„ÅåÈÅ©Áî®„Åï„Çå„Å¶„Åó„Åæ„ÅÜ„ÅÆ„Åßlinux„ÅÆ„Åø
        #alias git='git-wrap'
        ;;
esac

## Ë£úÂÆåÂÄôË£ú„ÅÆËâ≤„Å•„Åë
export ZLS_COLORS=$LS_COLORS

# Ë£úÂÆå„ÅÆÂà©Áî®Ë®≠ÂÆö
autoload -Uz compinit; compinit -u

## for zaw-cdr
#autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
#add-zsh-hook chpwd chpwd_recent_dirs
#zstyle ':chpwd:*' recent-dirs-max 500 # cdr„ÅÆÂ±•Ê≠¥„Çí‰øùÂ≠ò„Åô„ÇãÂÄãÊï∞
#zstyle ':chpwd:*' recent-dirs-default yes
#zstyle ':completion:*' recent-dirs-insert both

# Â§ßÊñáÂ≠ó„ÉªÂ∞èÊñáÂ≠ó„ÇíÂå∫Âà•„Åó„Å™„ÅÑ„ÅßË£úÂÆåÂá∫Êù•„Çã„Çà„ÅÜ„Å´„Åô„ÇãÔºéÂ§ßÊñáÂ≠ó„ÇíÂÖ•Âäõ„Åó„ÅüÂ†¥Âêà„ÅØÂå∫Âà•
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# „Éï„Ç°„Ç§„É´„É™„Çπ„ÉàË£úÂÆå„Åß„ÇÇls„Å®ÂêåÊßò„Å´Ëâ≤„Çí„Å§„Åë„ÇãÔΩ°
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
#zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

# ‰ªä„ÅÑ„Çã„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅØË£úÂÆåÂÄôË£ú„Å´Âá∫„Åï„Å™„ÅÑ
zstyle ':completion:*' ignore-parents parent pwd

## Ë£úÂÆåÂÄôË£ú„ÅÆ„Ç´„Éº„ÇΩ„É´ÈÅ∏Êäû„ÇíÊúâÂäπ„Å´
zstyle ':completion:*:default' menu select=1

# sudo „Åß„ÇÇË£úÂÆå„ÅÆÂØæË±°
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin


autoload -Uz is-at-least
if is-at-least 4.3.10; then
    autoload -Uz vcs_info
    zstyle ':vcs_info:*' enable git
    zstyle ':vcs_info:git:*' check-for-changes true
    zstyle ':vcs_info:git:*' stagedstr "(+'~') "
    zstyle ':vcs_info:git:*' unstagedstr "(*'-') "
    zstyle ':vcs_info:*' actionformats " %F{1}%c%u%f%F{3}@%F{4}%b%F{3} !!%F{1}%a ( > <)%f"
    zstyle ':vcs_info:*' formats       " %F{1}%c%u%f%F{3}@%F{4}%b%f"
fi

#RPROMPT="%F{5}[%F{2}%~\${vcs_info_msg_0_}%F{5}]%f"
PROMPT_HEADER="%F{5}%F{2}%~\${vcs_info_msg_0_}%F{5}%f"

case ${UID} in
    0)
        PROMPT="%B%{[31m%}%n@%m#%{[m%}%b "
        PROMPT2="%B%{[31m%}%_#%{[m%}%b "
        SPROMPT="%B%{[31m%}%r is correct? [n,y,a,e]:%[m%}%b "
        #[ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
            #PROMPT="%{[37m%}${HOST%%.*} ${PROMPT}"
        ;;
    *)
        PROMPT_COLOR=32
        precmd() {
            vcs_info
            PROMPT_COLOR="$[32 + ($PROMPT_COLOR - 31) % 5]"

            [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
                PRE_PROMPT="%{[37m%}${HOST%%.*} "

            PROMPT="${PRE_PROMPT}%F{${PROMPT_COLOR}}%n%%%f $PROMPT_HEADER
%% "
        }

        SPROMPT="%{$fg[red]%}%{$suggest%}(*ÔΩ•ÔΩ•%)? < %B%r%b %{$fg[red]%}? [y,n,a,e]:${reset_color} "
        ;;
esac

setopt prompt_subst

## „Éì„Éº„Éó„ÇíÈ≥¥„Çâ„Åï„Å™„ÅÑ
setopt nobeep

## Ë£úÂÆåÂÄôË£ú‰∏ÄË¶ß„Åß„Éï„Ç°„Ç§„É´„ÅÆÁ®ÆÂà•„Çí„Éû„Éº„ÇØË°®Á§∫
setopt list_types

## Ë£úÂÆåÂÄôË£ú„Çí‰∏ÄË¶ßË°®Á§∫
setopt auto_list

# „Éí„Çπ„Éà„É™„ÅÆË®≠ÂÆö

test -d /vagrant/ \
    && HISTFILE=/vagrant/.histfile \
    || HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000

# Â±•Ê≠¥„Éï„Ç°„Ç§„É´„Å´ÊôÇÂàª„ÇíË®òÈå≤
setopt extended_history

# Ë£úÂÆå„Åô„Çã„Åã„ÅÆË≥™Âïè„ÅØÁîªÈù¢„ÇíË∂Ö„Åà„ÇãÊôÇ„Å´„ÅÆ„Åø„Å´Ë°å„ÅÜÔΩ°
LISTMAX=0

setopt globsubst

# cd„ÅÆ„Çø„Ç§„Éü„É≥„Ç∞„ÅßËá™ÂãïÁöÑ„Å´pushd
setopt auto_pushd

# Ë§áÊï∞„ÅÆ zsh „ÇíÂêåÊôÇ„Å´‰Ωø„ÅÜÊôÇ„Å™„Å© history „Éï„Ç°„Ç§„É´„Å´‰∏äÊõ∏„Åç„Åõ„ÅöËøΩÂä†
setopt append_history

# Ë£úÂÆå„Ç≠„ÉºÔºàTab, Ctrl+I) „ÇíÈÄ£Êâì„Åô„Çã„Å†„Åë„ÅßÈ†Ü„Å´Ë£úÂÆåÂÄôË£ú„ÇíËá™Âãï„ÅßË£úÂÆåÊ©üËÉΩOff
#setopt no_auto_menu

# „Ç´„ÉÉ„Ç≥„ÅÆÂØæÂøú„Å™„Å©„ÇíËá™ÂãïÁöÑ„Å´Ë£úÂÆå
setopt auto_param_keys

# „Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„ÅÆË£úÂÆå„ÅßÊú´Â∞æ„ÅÆ / „ÇíËá™ÂãïÁöÑ„Å´‰ªòÂä†„Åó„ÄÅÊ¨°„ÅÆË£úÂÆå„Å´ÂÇô„Åà„Çã
setopt auto_param_slash

# „Éì„Éº„ÉóÈü≥„ÇíÈ≥¥„Çâ„Åï„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã
setopt NO_beep

# Áõ¥Ââç„Å®Âêå„Åò„Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÅØ„Éí„Çπ„Éà„É™„Å´ËøΩÂä†„Åó„Å™„ÅÑ
setopt hist_ignore_dups

# cd -[TAB] „Åß‰ª•ÂâçÁßªÂãï„Åó„Åü„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆÂÄôË£ú
setopt pushd_ignore_dups

# auto_pushd„ÅßÈáçË§á„Åô„Çã„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅØË®òÈå≤„Åó„Å™„ÅÑ
setopt correct

# ÈáçË§á„Åó„Åü„Éí„Çπ„Éà„É™„ÅØËøΩÂä†„Åó„Å™„ÅÑ
setopt hist_ignore_all_dups

# „Éí„Çπ„Éà„É™„ÇíÂëº„Å≥Âá∫„Åó„Å¶„Åã„ÇâÂÆüË°å„Åô„ÇãÈñì„Å´‰∏ÄÊó¶Á∑®ÈõÜ„Åß„Åç„ÇãÁä∂ÊÖã„Å´„Å™„Çã
setopt hist_verify

# auto_list „ÅÆË£úÂÆåÂÄôË£ú‰∏ÄË¶ß„Åß„ÄÅls -F „ÅÆ„Çà„ÅÜ„Å´„Éï„Ç°„Ç§„É´„ÅÆÁ®ÆÂà•„Çí„Éû„Éº„ÇØË°®Á§∫„Åó„Å™„ÅÑ
setopt NO_list_types

# „Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÅÆÂºïÊï∞„Åß --prefix=/usr „Å™„Å©„ÅÆ = ‰ª•Èôç„Åß„ÇÇË£úÂÆå„Åß„Åç„Çã
setopt magic_equal_subst

# „Éï„Ç°„Ç§„É´Âêç„ÅÆÂ±ïÈñã„Åß„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„Éû„ÉÉ„ÉÅ„Åó„ÅüÂ†¥ÂêàÊú´Â∞æ„Å´ / „Çí‰ªòÂä†„Åô„Çã
setopt mark_dirs

# 8 „Éì„ÉÉ„ÉàÁõÆ„ÇíÈÄö„Åô„Çà„ÅÜ„Å´„Å™„Çä„ÄÅÊó•Êú¨Ë™û„ÅÆ„Éï„Ç°„Ç§„É´Âêç„ÇíË°®Á§∫ÂèØËÉΩ
setopt print_eight_bit

# „Ç∑„Çß„É´„ÅÆ„Éó„É≠„Çª„Çπ„Åî„Å®„Å´Â±•Ê≠¥„ÇíÂÖ±Êúâ
setopt share_history

# Ctrl+w„ÅßÔΩ§Áõ¥Ââç„ÅÆ/„Åæ„Åß„ÇíÂâäÈô§„Åô„ÇãÔΩ°
WORDCHARS='|*?_-.[]~=&;!#$%^(){}<>'

# „Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„Å†„Åë„ÅßÔΩ§„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆÁßªÂãï„Çí„Åô„ÇãÔΩ°
setopt auto_cd

# C-s, C-q„ÇíÁÑ°Âäπ„Å´„Åô„Çã„ÄÇ
setopt NO_flow_control

# ÊîπË°å„Åå„Å™„Åè„Å¶„ÇÇË°®Á§∫
unsetopt promptcr

# „Ç∏„Éß„Éñ
unsetopt hup
setopt nocheckjobs

# Ctrl-s „ÇíÁÑ°Âäπ
stty stop undef

set kanji-code utf-8
set convert-meta off    #ÂøÖÈ†à
set meta-flag on        #ÂøÖÈ†à
set output-meta on      #ÂøÖÈ†à
set input-meta on
set enable-keypad on

r() {
    local f
    f=(~/.zshrc.d/completion/*(.))
    unfunction $f:t 2> /dev/null
    autoload -U $f:t
}

###########################
#
# Plugin
#
###########################

#GIT PATH
GITBIN=$(which git)

# composer
PATH="$HOME/.composer/vendor/bin:$PATH"

# rbenv
test -z "$(which rbenv | grep 'not found')" \
    && eval "$(rbenv init -)"

#for Go
export GOPATH=$HOME/.go
PATH="$GOPATH/bin:$PATH"

# cargo
PATH="$HOME/.cargo/bin:$PATH"

# google-cloud-sdk
test -d $HOME/google-cloud-sdk \
    && source $HOME/google-cloud-sdk/path.zsh.inc

# anyenv
test -d $HOME/.anyenv \
    && PATH="$HOME/.anyenv/bin:$PATH" \
    && eval "$(anyenv init -)"

###########################
# # Auto ls
#
###########################

# screen „ÅÆ„Çπ„ÉÜ„Éº„Çø„Çπ„Éê„Éº„Å´ÁèæÂú®ÂÆüË°å‰∏≠„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíË°®Á§∫
# cd „Çí„Åó„Åü„Å®„Åç„Å´ls„ÇíÂÆüË°å„Åô„Çã
chpwd () {
    case "${OSTYPE}" in
        darwin*)
            ls
            ;;
        *)
            echo -n "_`dirs`\\"
            ls
            ;;
    esac
}

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/sotarok/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/sotarok/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/sotarok/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/sotarok/google-cloud-sdk/completion.zsh.inc'; fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"


# direnv
test -z "$(which direnv | grep 'not found')" \
    && eval "$(direnv hook zsh)"
